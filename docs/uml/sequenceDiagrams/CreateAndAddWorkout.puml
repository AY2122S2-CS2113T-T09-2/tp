@startuml
'https://plantuml.com/sequence-diagram
!include ../Style.puml

autonumber 7.1

participant "workoutList\n:WorkoutList" AS wl
participant "exerciseList\n:ExerciseList" AS el

activate wl

group sd Write new Workout data into file on user's system.

ref over wl
Parse the user input to obtain
the exercise name and repetition count.
end

ref over wl
Check the validity of
exercise name and repetition count.
end

opt !isExerciseValid
create ":InvalidExerciseException" AS iee
wl -> iee : throw new InvalidExerciseException
activate iee
return
end

opt !isRepsValueValid
create ":InvalidWorkoutException" AS iwe
wl -> iwe : throw new InvalidWorkoutException
activate iwe
return
end

ref over wl
Check if an existing workout
with same parameters already exists.
end


opt hasSameExerciseNameAndReps
create ":InvalidWorkoutException" AS iwe2
wl -> iwe2 : throw new InvalidWorkoutException
activate iwe2
return
end

create "newWorkout:Workout" AS newWorkout
wl -> newWorkout : new Workout(userExerciseInput, userRepsInput)
activate newWorkout
return newWorkout:Workout

wl -> "workoutsHashMapList\n:HashMap" : put(newWorkoutKey, newWorkout)
activate "workoutsHashMapList\n:HashMap"
return

wl -> "workoutDisplayList\n:ArrayList<String>" : add(newWorkoutKey)
activate "workoutDisplayList\n:ArrayList<String>"
return

end
@enduml