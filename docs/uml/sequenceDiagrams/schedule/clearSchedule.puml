@startuml
'https://plantuml.com/sequence-diagram
!include ../../Style.puml

autonumber
hide footbox

title Sequence Diagram of `schedule /clear` Command

participant "werkIt:WerkIt" AS WerkIt COLOR_WERKIT
participant "newCommand\n:ScheduleCommand" AS newCommand COLOR_LOGIC
participant "dayList\n:DayList" AS DayList COLOR_LOGIC
participant "ui:UI" As UI COLOR_UI

activate WerkIt COLOR_WERKIT
ref over WerkIt
Obtain and parse user input
end

WerkIt -> newCommand : execute()
activate newCommand COLOR_LOGIC

newCommand -> DayList : clearDayPlan(userArgument)
activate DayList COLOR_LOGIC
create "Integer" AS int COLOR_LOGIC
DayList -> int: parseInt(userArgument)
DayList <-- int : dayNumber: int

create InvalidScheduleException AS ise COLOR_LOGIC
opt !isDayValid
DayList -> ise : throw new InvalidScheduleException
activate ise COLOR_LOGIC
return
deactivate ise
end
DayList -> DayList : clearPlan(dayNumber)
activate DayList COLOR_LOGIC
return
DayList -> DayList : covertDayNumberToDay(dayNumber)
activate DayList COLOR_LOGIC
return dayName:String
DayList -> UI : printClearedScheduleOnADay(dayName)
deactivate DayList
activate UI COLOR_UI
UI--> WerkIt: Print successfully remove \nplan from schedule message
deactivate UI

participant "fileManager:FileManager" as FileManager COLOR_STORAGE
newCommand -> FileManager : rewriteAllDaysScheduleToFile(newDay)
activate FileManager COLOR_STORAGE
ref over FileManager
Write the plans scheduled
for the week into 'schedule.txt'
file on user's system.
end
newCommand <-- FileManager
deactivate FileManager

destroy newCommand
@enduml